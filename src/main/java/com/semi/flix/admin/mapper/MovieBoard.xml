<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="MovieBoard">
	
	<!-- 쿼리를 xml로 작성하고 id:식별값	parameterType:우리가 전달할 값
		 resultType:데이터를 받아오는 값 -->
	<select id="MovieBoard_getList" parameterType="MovieBoardDto"	resultType="MovieBoardDto">
 		
 		select 
 		board_seq, genre_code, movie_title, movie_content, movie_images, movie_attendance, category_code, movie_producer, movie_hit, wdate
		,movie_productionyear , movie_agelimit, movie_url, genre_name, category_name, rnum from
		(select m.board_seq, m.genre_code, m.movie_title, m.movie_content, m.movie_images, m.movie_attendance, m.category_code, m.movie_producer, m.movie_hit, m.wdate
		,m.movie_productionyear , m.movie_agelimit, m.movie_url, g.genre_name as genre_name, c.category_name as category_name, @rownum := @rownum+1 AS rnum 
        from movie_tbl m, category_tbl c, genre_tbl g
        where m.category_code = c.category_code
        and m.genre_code = g.genre_code)
        A, (select @rownum:=0) B 
		
		<!-- if test="key=='1'" 이렇게 쓰면 인식이 안된다. 따음표 위치 잘 확인하자.-->
		
		<if test='key!=null and keyword!=null'>

         <if test='key=="1"'>
         where movie_title like concat('%', #{keyword} , '%') or
               genre_name like concat('%', #{keyword} , '%') or 
               movie_producer like concat('%', #{keyword} , '%') 
         </if>
         
         <if test='key=="2"'>
         where movie_title like concat('%', #{keyword} , '%')
         </if>
         
         <if test='key=="3"'>
         where movie_producer like concat('%', #{keyword} , '%')
         </if>
         
         <if test='key=="4"'>
         where genre_name like concat('%', #{keyword} , '%')
         </if>
         
      	</if>
      	
		order by board_seq desc
		limit #{start}, #{pageSize}
	</select>
	<!-- 
		paging 쿼리는 dbms마다 다르다
		select ~~ limit 시작위치, 개수
	 -->
	<!-- 페이징 때문에 전체 레코드 개수를 알아오기 위한 쿼리가 필요하다. -->
	<select id="MovieBoard_getTotal" parameterType="MovieBoardDto" resultType="Integer">
		select count(*) from movie_tbl
	</select>
	
	<insert id="MovieBoard_insert" parameterType="MovieBoardDto">
		insert into movie_tbl
		(category_code, genre_code, movie_title, movie_producer, movie_content, movie_images, movie_attendance, movie_hit, movie_productionyear, movie_agelimit, movie_url, wdate)
		values
		(#{category_code}, #{genre_code}, #{movie_title}, #{movie_producer}, #{movie_content}, #{movie_images}, #{movie_attendance}, #{movie_hit}, #{movie_productionyear}, #{movie_agelimit}, #{movie_url}, now())
	</insert>
	
	<select id="MovieBoard_getView" parameterType="String"	resultType="MovieBoardDto">
 		select 
 		board_seq, genre_code, movie_title, movie_content, movie_images, movie_attendance, category_code, movie_producer, movie_hit, wdate
		,movie_productionyear , movie_agelimit, movie_url, genre_name, category_name from
		(select m.board_seq, m.genre_code, m.movie_title, m.movie_content, m.movie_images, m.movie_attendance, m.category_code, m.movie_producer, m.movie_hit, m.wdate
		,m.movie_productionyear , m.movie_agelimit, m.movie_url, g.genre_name as genre_name, c.category_name as category_name
        from movie_tbl m, category_tbl c, genre_tbl g
        where m.category_code = c.category_code
        and m.genre_code = g.genre_code)
        A where board_seq = #{board_seq}
	</select>
	
	<delete id="MovieBoard_delete" parameterType="String">
		delete from movie_tbl where board_seq=#{board_seq}
	</delete>
	
	<update id="MovieBoard_update" parameterType="MovieBoardDto">
		update movie_tbl set genre_code = #{genre_code}
						,category_code = #{category_code}
						,movie_title = #{movie_title}
						,movie_producer = #{movie_producer}
						,movie_content = #{movie_content}
						,movie_images = #{movie_images}
						,movie_attendance = #{movie_attendance}
						,movie_productionyear = #{movie_productionyear}
						,movie_agelimit = #{movie_agelimit}
						,movie_url = #{movie_url}
		where board_seq=#{board_seq}
	</update>
</mapper>